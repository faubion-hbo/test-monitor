name: monitor

on:
  workflow_dispatch:
    inputs:
      COMPLETED_RUN_ID:
        description: The ID of the run that was completed prior (if there was one)
        required: false
        type: string
      LAST_WORKFLOW_NAME:
        description: The name of the workflow that ran
        required: false
        type: string
      MONITORED_REPO:
        description: The repository the workflow was ran from
        required: false
        type: string

jobs:
  monitor:
    if: >
      inputs.COMPLETED_RUN_ID != ''
      && inputs.LAST_WORKFLOW_NAME != ''
      && inputs.MONITORED_REPO != ''
    runs-on: ubuntu-latest
    steps:
      - name: Print run log
        env:
          COMPLETED_RUN_ID: ${{ inputs.COMPLETED_RUN_ID }}
          MONITORED_REPO: ${{ inputs.MONITORED_REPO }}
          GITHUB_TOKEN: ${{ secrets.MONITOR_ROUNDTRIP_PAT }}
        run: |
          gh run -R "$MONITORED_REPO" view "$COMPLETED_RUN_ID" --log

      - env:
          LAST_WORKFLOW_NAME: ${{ inputs.LAST_WORKFLOW_NAME }}
        run: |
          echo "Just ran \"$LAST_WORKFLOW_NAME\"; recording results..."

  trigger:
    if: always()
    needs: monitor
    runs-on: ubuntu-latest
    steps:
      #- id: construct
      #  env:
      #    INPUT_1: EX_INPUT_1
      #    INPUT_VAL_1: "Howdy, y'all!"
      #  run: |
      #    echo "workflow-input-args=-f \"$INPUT_1=$INPUT_VAL_1\"" | tee -a $GITHUB_OUTPUT

      #- id: new-file
      #  run: |
      #    touch myfile.txt
      #    echo "Hello=World" >> myfile.txt
      #    echo "Ben=Kenobi" >> myfile.txt

      - id: determine-workflow
        env:
          PREV_WORKFLOW_FILENAME: ${{ inputs.LAST_WORKFLOW_NAME }}
        run: |
          if [[ "$PREV_WORKFLOW_FILENAME" == 'test-workflow-first.yaml' ]]; then
            echo "workflow-filename=test-workflow-second-a.yaml" | tee -a $GITHUB_OUTPUT
          elif [[ "$PREV_WORKFLOW_FILENAME" == 'test-workflow-second-a.yaml' ]]; then
            echo "workflow-filename=test-workflow-second-b.yaml" | tee -a $GITHUB_OUTPUT
          else
            echo "workflow-filename=test-workflow-first.yaml" | tee -a $GITHUB_OUTPUT
          fi

      - env:
          WORKFLOW_FILENAME: ${{ steps.determine-workflow.outputs.workflow-filename }}
          GITHUB_TOKEN: ${{ secrets.MONITOR_ROUNDTRIP_PAT }}
        run: |
          #gh workflow -R faubion-hbo/test-monitor-monitored-repo run "$WORKFLOW_FILENAME" -F data=@myfile.txt ${{ steps.construct.outputs.workflow-input-args }}
          gh workflow -R faubion-hbo/test-monitor-monitored-repo run "$WORKFLOW_FILENAME"
